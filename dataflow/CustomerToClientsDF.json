{
	"name": "CustomerToClientsDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomerTabledataPuller",
						"type": "DatasetReference"
					},
					"name": "CustomerSrc"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ClientTable",
						"type": "DatasetReference"
					},
					"name": "ClientSk"
				}
			],
			"transformations": [
				{
					"name": "Name"
				}
			],
			"script": "source(output(\n\t\tCustomerID as string,\n\t\tCompanyName as string,\n\t\tContactName as string,\n\t\tContactTitle as string,\n\t\tAddress as string,\n\t\tCity as string,\n\t\tRegion as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tPhone as string,\n\t\tFax as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CustomerSrc\nCustomerSrc derive(Name = ContactTitle +\",\" +ContactName,\n\t\tFormattedAddress = concat(Address ,\" \" , City , \" \",Region ,\" ,\" , PostalCode ,\"-\", Country)) ~> Name\nName sink(input(\n\t\tId as integer,\n\t\tName as string,\n\t\tAddress as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tName,\n\t\tAddress = FormattedAddress\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> ClientSk"
		}
	}
}